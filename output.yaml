version: '2'
volumes:
  orderer.Mohamed.com
  peer0.IBM.Mohamed.com
  peer1.IBM.Mohamed.com
  peer2.IBM.Mohamed.com
  peer0.Saintmarc.Mohamed.com
  peer1.Saintmarc.Mohamed.com
  peer2.Saintmarc.Mohamed.com

networks:
  byfn:
services:
  IBMCA:
    image: hyperledger/fabric-ca:1.4
    environment:
      - FABRIC_CA_HOME=/etc/hyperledger/fabric-ca-server
      - FABRIC_CA_SERVER_CA_NAME=ca-IBM
      - FABRIC_CA_SERVER_TLS_ENABLED=true
      - FABRIC_CA_SERVER_TLS_CERTFILE=/etc/hyperledger/fabric-ca-server-config/ca.IBM.Mohamed.com-cert.pem
      - FABRIC_CA_SERVER_TLS_KEYFILE=/etc/hyperledger/fabric-ca-server-config/CA2_PRIVATE_KEY
    ports:
      - "8054:7054"
    command: sh -c 'fabric-ca-server start --ca.certfile /etc/hyperledger/fabric-ca-server-config/ca.IBM.Mohamed.com-cert.pem --ca.keyfile /etc/hyperledger/fabric-ca-server-config/CA2_PRIVATE_KEY -b admin:adminpw -d'
    volumes:
      - ./crypto-config/peerOrganizations/IBM.Mohamed.com/ca/:/etc/hyperledger/fabric-ca-server-config
    container_name: ca_peerIBM
    networks:
      - byfn

  SaintmarcCA:
    image: hyperledger/fabric-ca:1.4
    environment:
      - FABRIC_CA_HOME=/etc/hyperledger/fabric-ca-server
      - FABRIC_CA_SERVER_CA_NAME=ca-Saintmarc
      - FABRIC_CA_SERVER_TLS_ENABLED=true
      - FABRIC_CA_SERVER_TLS_CERTFILE=/etc/hyperledger/fabric-ca-server-config/ca.Saintmarc.Mohamed.com-cert.pem
      - FABRIC_CA_SERVER_TLS_KEYFILE=/etc/hyperledger/fabric-ca-server-config/CA2_PRIVATE_KEY
    ports:
      - "8054:7054"
    command: sh -c 'fabric-ca-server start --ca.certfile /etc/hyperledger/fabric-ca-server-config/ca.Saintmarc.Mohamed.com-cert.pem --ca.keyfile /etc/hyperledger/fabric-ca-server-config/CA2_PRIVATE_KEY -b admin:adminpw -d'
    volumes:
      - ./crypto-config/peerOrganizations/Saintmarc.Mohamed.com/ca/:/etc/hyperledger/fabric-ca-server-config
    container_name: ca_peerSaintmarc
    networks:
      - byfn

  orderer.Mohamed.com:
    image: hyperledger/fabric-orderer:1.4
    environment:
      - FABRIC_LOGGING_SPEC=INFO
      - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
      - ORDERER_GENERAL_GENESISMETHOD=file
      - ORDERER_GENERAL_GENESISFILE=/var/hyperledger/orderer/orderer.genesis.block
      - ORDERER_GENERAL_LOCALMSPID=OrdererMSP
      - ORDERER_GENERAL_LOCALMSPDIR=/var/hyperledger/orderer/msp
      # enabled TLS
      - ORDERER_GENERAL_TLS_ENABLED=true
      - ORDERER_GENERAL_TLS_PRIVATEKEY=/var/hyperledger/orderer/tls/server.key
      - ORDERER_GENERAL_TLS_CERTIFICATE=/var/hyperledger/orderer/tls/server.crt
      - ORDERER_GENERAL_TLS_ROOTCAS=[/var/hyperledger/orderer/tls/ca.crt]
      - ORDERER_KAFKA_TOPIC_REPLICATIONFACTOR=1
      - ORDERER_KAFKA_VERBOSE=true
      - ORDERER_GENERAL_CLUSTER_CLIENTCERTIFICATE=/var/hyperledger/orderer/tls/server.crt
      - ORDERER_GENERAL_CLUSTER_CLIENTPRIVATEKEY=/var/hyperledger/orderer/tls/server.key
      - ORDERER_GENERAL_CLUSTER_ROOTCAS=[/var/hyperledger/orderer/tls/ca.crt]
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric
    command: orderer
    volumes:
        - ../channel-artifacts/genesis.block:/var/hyperledger/orderer/orderer.genesis.block
        - ../crypto-config/ordererOrganizations/Mohamed.com/orderers/orderer.Mohamed.com/msp:/var/hyperledger/orderer/msp
        - ../crypto-config/ordererOrganizations/Mohamed.com/orderers/orderer.Mohamed.com/tls/:/var/hyperledger/orderer/tls
        - orderer.Mohamed.com:/var/hyperledger/production/orderer
    ports:
      - 7050:7050
    container_name: orderer.Mohamed.com
    networks:
      - byfn
  peer0.IBM.Mohamed.com:
    container_name: peer0.IBM.Mohamed.com
    image: hyperledger/fabric-peer:1.4
    environment:
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      # the following setting starts chaincode containers on the same
      # bridge network as the peers
      # https://docs.docker.com/compose/networking/
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${COMPOSE_PROJECT_NAME}_byfn
      - FABRIC_LOGGING_SPEC=INFO
      #- FABRIC_LOGGING_SPEC=DEBUG
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_GOSSIP_USELEADERELECTION=true
      - CORE_PEER_GOSSIP_ORGLEADER=false
      - CORE_PEER_PROFILE_ENABLED=true
      - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/fabric/tls/server.crt
      - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/fabric/tls/server.key
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/fabric/tls/ca.crt
      - CORE_PEER_ID=peer0.IBM.Mohamed.com
      - CORE_PEER_ADDRESS=peer0.IBM.Mohamed.com:7051
      - CORE_PEER_LISTENADDRESS=0.0.0.0:7051
      - CORE_PEER_CHAINCODEADDRESS=peer0.IBM.Mohamed.com:7052
      - CORE_PEER_CHAINCODELISTENADDRESS=0.0.0.0:7052
      - CORE_PEER_GOSSIP_BOOTSTRAP=peer1.IBM.Mohamed.com:8051
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer0.IBM.Mohamed.com:7051
      - CORE_PEER_LOCALMSPID=IBMMSP
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
    command: peer node start
    volumes:
        - /var/run/:/host/var/run/
        - ../crypto-config/peerOrganizations/IBM.Mohamed.com/peers/peer0.IBM.Mohamed.com/msp:/etc/hyperledger/fabric/msp
        - ../crypto-config/peerOrganizations/IBM.Mohamed.com/peers/peer0.IBM.Mohamed.com/tls:/etc/hyperledger/fabric/tls
        - peer0.IBM.Mohamed.com:/var/hyperledger/production
    ports:
      - 7051:7051
    networks:
      - byfn
  peer1.IBM.Mohamed.com:
    container_name: peer1.IBM.Mohamed.com
    image: hyperledger/fabric-peer:1.4
    environment:
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      # the following setting starts chaincode containers on the same
      # bridge network as the peers
      # https://docs.docker.com/compose/networking/
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${COMPOSE_PROJECT_NAME}_byfn
      - FABRIC_LOGGING_SPEC=INFO
      #- FABRIC_LOGGING_SPEC=DEBUG
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_GOSSIP_USELEADERELECTION=true
      - CORE_PEER_GOSSIP_ORGLEADER=false
      - CORE_PEER_PROFILE_ENABLED=true
      - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/fabric/tls/server.crt
      - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/fabric/tls/server.key
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/fabric/tls/ca.crt
      - CORE_PEER_ID=peer1.IBM.Mohamed.com
      - CORE_PEER_ADDRESS=peer1.IBM.Mohamed.com:7051
      - CORE_PEER_LISTENADDRESS=0.0.0.0:7051
      - CORE_PEER_CHAINCODEADDRESS=peer1.IBM.Mohamed.com:7052
      - CORE_PEER_CHAINCODELISTENADDRESS=0.0.0.0:7052
      - CORE_PEER_GOSSIP_BOOTSTRAP=peer1.IBM.Mohamed.com:8051
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer1.IBM.Mohamed.com:7051
      - CORE_PEER_LOCALMSPID=IBMMSP
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
    command: peer node start
    volumes:
        - /var/run/:/host/var/run/
        - ../crypto-config/peerOrganizations/IBM.Mohamed.com/peers/peer1.IBM.Mohamed.com/msp:/etc/hyperledger/fabric/msp
        - ../crypto-config/peerOrganizations/IBM.Mohamed.com/peers/peer1.IBM.Mohamed.com/tls:/etc/hyperledger/fabric/tls
        - peer1.IBM.Mohamed.com:/var/hyperledger/production
    ports:
      - 7051:7051
    networks:
      - byfn
  peer2.IBM.Mohamed.com:
    container_name: peer2.IBM.Mohamed.com
    image: hyperledger/fabric-peer:1.4
    environment:
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      # the following setting starts chaincode containers on the same
      # bridge network as the peers
      # https://docs.docker.com/compose/networking/
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${COMPOSE_PROJECT_NAME}_byfn
      - FABRIC_LOGGING_SPEC=INFO
      #- FABRIC_LOGGING_SPEC=DEBUG
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_GOSSIP_USELEADERELECTION=true
      - CORE_PEER_GOSSIP_ORGLEADER=false
      - CORE_PEER_PROFILE_ENABLED=true
      - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/fabric/tls/server.crt
      - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/fabric/tls/server.key
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/fabric/tls/ca.crt
      - CORE_PEER_ID=peer2.IBM.Mohamed.com
      - CORE_PEER_ADDRESS=peer2.IBM.Mohamed.com:7051
      - CORE_PEER_LISTENADDRESS=0.0.0.0:7051
      - CORE_PEER_CHAINCODEADDRESS=peer2.IBM.Mohamed.com:7052
      - CORE_PEER_CHAINCODELISTENADDRESS=0.0.0.0:7052
      - CORE_PEER_GOSSIP_BOOTSTRAP=peer1.IBM.Mohamed.com:8051
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer2.IBM.Mohamed.com:7051
      - CORE_PEER_LOCALMSPID=IBMMSP
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
    command: peer node start
    volumes:
        - /var/run/:/host/var/run/
        - ../crypto-config/peerOrganizations/IBM.Mohamed.com/peers/peer2.IBM.Mohamed.com/msp:/etc/hyperledger/fabric/msp
        - ../crypto-config/peerOrganizations/IBM.Mohamed.com/peers/peer2.IBM.Mohamed.com/tls:/etc/hyperledger/fabric/tls
        - peer2.IBM.Mohamed.com:/var/hyperledger/production
    ports:
      - 7051:7051
    networks:
      - byfn
  peer0.Saintmarc.Mohamed.com:
    container_name: peer0.Saintmarc.Mohamed.com
    image: hyperledger/fabric-peer:1.4
    environment:
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      # the following setting starts chaincode containers on the same
      # bridge network as the peers
      # https://docs.docker.com/compose/networking/
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${COMPOSE_PROJECT_NAME}_byfn
      - FABRIC_LOGGING_SPEC=INFO
      #- FABRIC_LOGGING_SPEC=DEBUG
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_GOSSIP_USELEADERELECTION=true
      - CORE_PEER_GOSSIP_ORGLEADER=false
      - CORE_PEER_PROFILE_ENABLED=true
      - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/fabric/tls/server.crt
      - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/fabric/tls/server.key
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/fabric/tls/ca.crt
      - CORE_PEER_ID=peer0.Saintmarc.Mohamed.com
      - CORE_PEER_ADDRESS=peer0.Saintmarc.Mohamed.com:7051
      - CORE_PEER_LISTENADDRESS=0.0.0.0:7051
      - CORE_PEER_CHAINCODEADDRESS=peer0.Saintmarc.Mohamed.com:7052
      - CORE_PEER_CHAINCODELISTENADDRESS=0.0.0.0:7052
      - CORE_PEER_GOSSIP_BOOTSTRAP=peer1.Saintmarc.Mohamed.com:8051
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer0.Saintmarc.Mohamed.com:7051
      - CORE_PEER_LOCALMSPID=SaintmarcMSP
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
    command: peer node start
    volumes:
        - /var/run/:/host/var/run/
        - ../crypto-config/peerOrganizations/Saintmarc.Mohamed.com/peers/peer0.Saintmarc.Mohamed.com/msp:/etc/hyperledger/fabric/msp
        - ../crypto-config/peerOrganizations/Saintmarc.Mohamed.com/peers/peer0.Saintmarc.Mohamed.com/tls:/etc/hyperledger/fabric/tls
        - peer0.Saintmarc.Mohamed.com:/var/hyperledger/production
    ports:
      - 7051:7051
    networks:
      - byfn
  peer1.Saintmarc.Mohamed.com:
    container_name: peer1.Saintmarc.Mohamed.com
    image: hyperledger/fabric-peer:1.4
    environment:
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      # the following setting starts chaincode containers on the same
      # bridge network as the peers
      # https://docs.docker.com/compose/networking/
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${COMPOSE_PROJECT_NAME}_byfn
      - FABRIC_LOGGING_SPEC=INFO
      #- FABRIC_LOGGING_SPEC=DEBUG
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_GOSSIP_USELEADERELECTION=true
      - CORE_PEER_GOSSIP_ORGLEADER=false
      - CORE_PEER_PROFILE_ENABLED=true
      - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/fabric/tls/server.crt
      - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/fabric/tls/server.key
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/fabric/tls/ca.crt
      - CORE_PEER_ID=peer1.Saintmarc.Mohamed.com
      - CORE_PEER_ADDRESS=peer1.Saintmarc.Mohamed.com:7051
      - CORE_PEER_LISTENADDRESS=0.0.0.0:7051
      - CORE_PEER_CHAINCODEADDRESS=peer1.Saintmarc.Mohamed.com:7052
      - CORE_PEER_CHAINCODELISTENADDRESS=0.0.0.0:7052
      - CORE_PEER_GOSSIP_BOOTSTRAP=peer1.Saintmarc.Mohamed.com:8051
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer1.Saintmarc.Mohamed.com:7051
      - CORE_PEER_LOCALMSPID=SaintmarcMSP
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
    command: peer node start
    volumes:
        - /var/run/:/host/var/run/
        - ../crypto-config/peerOrganizations/Saintmarc.Mohamed.com/peers/peer1.Saintmarc.Mohamed.com/msp:/etc/hyperledger/fabric/msp
        - ../crypto-config/peerOrganizations/Saintmarc.Mohamed.com/peers/peer1.Saintmarc.Mohamed.com/tls:/etc/hyperledger/fabric/tls
        - peer1.Saintmarc.Mohamed.com:/var/hyperledger/production
    ports:
      - 7051:7051
    networks:
      - byfn
  peer2.Saintmarc.Mohamed.com:
    container_name: peer2.Saintmarc.Mohamed.com
    image: hyperledger/fabric-peer:1.4
    environment:
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      # the following setting starts chaincode containers on the same
      # bridge network as the peers
      # https://docs.docker.com/compose/networking/
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${COMPOSE_PROJECT_NAME}_byfn
      - FABRIC_LOGGING_SPEC=INFO
      #- FABRIC_LOGGING_SPEC=DEBUG
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_GOSSIP_USELEADERELECTION=true
      - CORE_PEER_GOSSIP_ORGLEADER=false
      - CORE_PEER_PROFILE_ENABLED=true
      - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/fabric/tls/server.crt
      - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/fabric/tls/server.key
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/fabric/tls/ca.crt
      - CORE_PEER_ID=peer2.Saintmarc.Mohamed.com
      - CORE_PEER_ADDRESS=peer2.Saintmarc.Mohamed.com:7051
      - CORE_PEER_LISTENADDRESS=0.0.0.0:7051
      - CORE_PEER_CHAINCODEADDRESS=peer2.Saintmarc.Mohamed.com:7052
      - CORE_PEER_CHAINCODELISTENADDRESS=0.0.0.0:7052
      - CORE_PEER_GOSSIP_BOOTSTRAP=peer1.Saintmarc.Mohamed.com:8051
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer2.Saintmarc.Mohamed.com:7051
      - CORE_PEER_LOCALMSPID=SaintmarcMSP
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
    command: peer node start
    volumes:
        - /var/run/:/host/var/run/
        - ../crypto-config/peerOrganizations/Saintmarc.Mohamed.com/peers/peer2.Saintmarc.Mohamed.com/msp:/etc/hyperledger/fabric/msp
        - ../crypto-config/peerOrganizations/Saintmarc.Mohamed.com/peers/peer2.Saintmarc.Mohamed.com/tls:/etc/hyperledger/fabric/tls
        - peer2.Saintmarc.Mohamed.com:/var/hyperledger/production
    ports:
      - 7051:7051
    networks:
      - byfn
